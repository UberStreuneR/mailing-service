version: "3.8"

services:
  django:
    build: .
    container_name: django
    command: ./docker-entrypoint.sh
    env_file:
      - ./.dev.env
    volumes:
      - .:/usr/src/app/
    ports:
      - "8000:8000"
    depends_on:
      - pgdb
      - redis

  celery:
    build: .
    command: celery -A mailing worker -l INFO
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.dev.env
    # environment:
    #   - POSTGRES_DB=django_postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=password
    depends_on:
      - django
      - redis
      - pgdb

  celery-beat:
    build: .
    command: celery -A mailing beat -l INFO
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.dev.env
    # environment:
    #   - POSTGRES_DB=django_postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=password
    depends_on:
      - django
      - redis
      - pgdb

  pgdb:
    image: postgres
    container_name: pgdb
    env_file:
      - ./.dev.env
    # environment:
    #   - POSTGRES_DB=django_postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=password
    volumes:
      - pgdata:/var/lib/postgresql/data
    # expose:
    #   - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:alpine"
    depends_on:
      pgdb:
        condition: service_healthy

volumes:
  pgdata:
